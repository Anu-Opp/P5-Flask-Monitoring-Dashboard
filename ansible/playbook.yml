---
- name: Configure Flask Monitoring Dashboard
  hosts: flask_servers
  become: yes
  vars:
    app_user: ubuntu
    app_dir: /home/ubuntu/flask-dashboard
    venv_dir: /home/ubuntu/flask-dashboard/venv
    
  tasks:
    - name: Wait for system to be ready
      wait_for_connection:
        delay: 30
        timeout: 300

    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install required packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - python3-full
          - nginx
          - supervisor
        state: present

    - name: Ensure application directory exists
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Copy Flask application
      copy:
        src: "../app/app.py"
        dest: "{{ app_dir }}/app.py"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'

    - name: Copy requirements file
      copy:
        src: "../app/requirements.txt"
        dest: "{{ app_dir }}/requirements.txt"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'

    - name: Create Python virtual environment
      command: python3 -m venv {{ venv_dir }}
      become_user: "{{ app_user }}"
      args:
        creates: "{{ venv_dir }}/bin/python"

    - name: Install Python dependencies in virtual environment
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ venv_dir }}"
      become_user: "{{ app_user }}"

    - name: Create Supervisor configuration
      copy:
        dest: /etc/supervisor/conf.d/flask-dashboard.conf
        content: |
          [program:flask-dashboard]
          command={{ venv_dir }}/bin/gunicorn --bind 127.0.0.1:5000 app:app
          directory={{ app_dir }}
          user={{ app_user }}
          autostart=true
          autorestart=true
          redirect_stderr=true
          stdout_logfile=/var/log/flask-dashboard.log

    - name: Create Nginx configuration
      copy:
        dest: /etc/nginx/sites-available/flask-dashboard
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://127.0.0.1:5000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/flask-dashboard
        dest: /etc/nginx/sites-enabled/flask-dashboard
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart services
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - supervisor
        - nginx

    - name: Start Flask app
      supervisorctl:
        name: flask-dashboard
        state: restarted
